// Generated by CoffeeScript 1.6.3
(function() {
  var DoubleNode, Node,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Node = require('./single_linked_list');

  DoubleNode = (function(_super) {
    __extends(DoubleNode, _super);

    function DoubleNode(prev, next, data) {
      this.prev = prev;
      this.next = next;
      this.data = data;
      DoubleNode.__super__.constructor.call(this, this.prev, this.next, this.data);
    }

    DoubleNode.prototype.add = function(node) {
      var element_after_intsert;
      if (node === null) {
        return null;
      }
      element_after_intsert = this.next;
      this.next = node;
      if (node.prev != null) {
        node.prev = this;
      }
      if (this.next !== null) {
        node.next = element_after_intsert;
        if (element_after_intsert != null) {
          return element_after_intsert.prev = node;
        }
      }
    };

    DoubleNode.prototype.printListBeforeThisNode = function() {
      var prev_el;
      prev_el = this.prev;
      console.log('START');
      console.log(this.data, '<-');
      while ((prev_el != null ? prev_el.prev : void 0) !== null) {
        console.log(prev_el.data, '<-');
        prev_el = prev_el.prev;
      }
      return console.log(prev_el.data, 'END');
    };

    return DoubleNode;

  })(Node);

  module.exports = DoubleNode;

}).call(this);
