// Generated by CoffeeScript 1.6.3
(function() {
  var LinkedList, Node, assert;

  LinkedList = require('./../linked_list');

  Node = require('./../node');

  assert = require('assert');

  describe('Node class', function() {
    var node;
    node = new Node(null, null, 'test');
    it('creates an object of Node class', function() {
      return assert.equal(node.data, 'test');
    });
    return it('shows correct isTailNode() and isHeadNode() result', function() {
      assert.equal(node.isTailNode(), true);
      return assert.equal(node.isHeadNode(), true);
    });
  });

  describe('LinkedList class', function() {
    var a, b, c, d, list, long_list, my_list;
    a = new Node(null, null, 'A');
    b = new Node(null, null, 'B');
    c = new Node(null, null, 'C');
    d = new Node(null, null, 'D');
    list = new LinkedList(a);
    my_list = new LinkedList();
    long_list = new LinkedList(a);
    long_list.add(b);
    long_list.add(c);
    return describe('length()', function() {
      it('shows zero length for empty list', function() {
        console.log(my_list);
        return assert.equal(my_list.length(), 0);
      });
      it('shows correct length for list of length 1', function() {
        return assert.equal(list.length(), 1);
      });
      return it('shows correct length for a list of three items', function() {
        return assert.equal(long_list.length(), 3);
      });
    });
  });

}).call(this);
